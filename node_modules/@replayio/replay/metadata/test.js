"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.init = exports.validate = void 0;
const { array, create, defaulted, enums, number, object, optional, string, define } = require("superstruct");
const isUuid = require("is-uuid");
const VERSION = 1;
const versions = {
    1: object({
        file: optional(string()),
        path: optional(array(string())),
        result: enums(["passed", "failed", "timedOut"]),
        run: optional(object({
            id: define('uuid', (v) => isUuid.v4(v)),
            title: optional(string())
        })),
        title: string(),
        version: defaulted(number(), () => 1),
    }),
};
function validate(metadata) {
    if (!metadata || !metadata.test) {
        throw new Error('Test metadata does not exist');
    }
    return init(metadata.test);
}
exports.validate = validate;
function init(data) {
    const version = typeof data.version === "number" ? data.version : VERSION;
    if (versions[version]) {
        return {
            test: create(data, versions[version]),
        };
    }
    else {
        throw new Error(`Test metadata version ${data.version} not supported`);
    }
}
exports.init = init;
//# sourceMappingURL=test.js.map